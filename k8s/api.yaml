apiVersion: apps/v1
kind: Deployment
metadata:
  name: bytebook-api
  namespace: bytebook
  labels:
    app.kubernetes.io/name: bytebook
    app.kubernetes.io/component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: bytebook
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bytebook
        app.kubernetes.io/component: api
    spec:
      containers:
      - name: api
        image: bytebook/api:latest
        ports:
        - containerPort: 8080
        env:
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: bytebook-secrets
              key: ConnectionStrings__DefaultConnection
        envFrom:
        - configMapRef:
            name: bytebook-config
        - secretRef:
            name: bytebook-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: bytebook-api
  namespace: bytebook
  labels:
    app.kubernetes.io/name: bytebook
    app.kubernetes.io/component: api
spec:
  selector:
    app.kubernetes.io/name: bytebook
    app.kubernetes.io/component: api
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bytebook-ingress
  namespace: bytebook
  labels:
    app.kubernetes.io/name: bytebook
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.bytebook.com
    secretName: bytebook-tls
  rules:
  - host: api.bytebook.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bytebook-api
            port:
              number: 80